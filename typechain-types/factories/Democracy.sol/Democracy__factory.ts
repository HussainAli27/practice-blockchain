/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  Democracy,
  DemocracyInterface,
} from "../../Democracy.sol/Democracy";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "candidateAddress",
        type: "address",
      },
    ],
    name: "CandidateRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "candidates",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "candidateAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "destroy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isDestroyed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "isNameTaken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "registerAsCandidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260008060146101000a81548160ff021916908315150217905550348015602957600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611149806100796000396000f3fe6080604052600436106100595760003560e01c806383197ef0146100655780638ab66a901461007c578063a0d03526146100bb578063a6151a84146100f8578063b3da4e3414610123578063b52087c11461016057610060565b3661006057005b600080fd5b34801561007157600080fd5b5061007a610189565b005b34801561008857600080fd5b506100a3600480360381019061009e91906107e7565b610358565b6040516100b2939291906108cc565b60405180910390f35b3480156100c757600080fd5b506100e260048036038101906100dd91906107e7565b61042a565b6040516100ef9190610925565b60405180910390f35b34801561010457600080fd5b5061010d61044a565b60405161011a9190610925565b60405180910390f35b34801561012f57600080fd5b5061014a60048036038101906101459190610a75565b61045d565b6040516101579190610925565b60405180910390f35b34801561016c57600080fd5b5061018760048036038101906101829190610a75565b610493565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610217576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020e90610b0a565b60405180910390fd5b600060149054906101000a900460ff1615610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e90610b76565b60405180910390fd5b600047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516102b390610bc7565b60006040518083038185875af1925050503d80600081146102f0576040519150601f19603f3d011682016040523d82523d6000602084013e6102f5565b606091505b5050905080610339576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033090610c4e565b60405180910390fd5b6001600060146101000a81548160ff0219169083151502179055505050565b600360205280600052604060002060009150905080600001805461037b90610c9d565b80601f01602080910402602001604051908101604052809291908181526020018280546103a790610c9d565b80156103f45780601f106103c9576101008083540402835291602001916103f4565b820191906000526020600020905b8154815290600101906020018083116103d757829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154905083565b60016020528060005260406000206000915054906101000a900460ff1681565b600060149054906101000a900460ff1681565b6002818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b60008151116104d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ce90610d1a565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610564576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055b90610d86565b60405180910390fd5b6002816040516105749190610de2565b908152602001604051809103902060009054906101000a900460ff16156105d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c790610e45565b60405180910390fd5b60405180606001604052808281526020013373ffffffffffffffffffffffffffffffffffffffff1681526020016000815250600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190816106569190611011565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015590505060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016002826040516107149190610de2565b908152602001604051809103902060006101000a81548160ff0219169083151502179055507fd13c0f94040a8ce9625a1aaefda862d7aa4723f25aab59446f073da43dd82293813360405161076a9291906110e3565b60405180910390a150565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107b482610789565b9050919050565b6107c4816107a9565b81146107cf57600080fd5b50565b6000813590506107e1816107bb565b92915050565b6000602082840312156107fd576107fc61077f565b5b600061080b848285016107d2565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561084e578082015181840152602081019050610833565b60008484015250505050565b6000601f19601f8301169050919050565b600061087682610814565b610880818561081f565b9350610890818560208601610830565b6108998161085a565b840191505092915050565b6108ad816107a9565b82525050565b6000819050919050565b6108c6816108b3565b82525050565b600060608201905081810360008301526108e6818661086b565b90506108f560208301856108a4565b61090260408301846108bd565b949350505050565b60008115159050919050565b61091f8161090a565b82525050565b600060208201905061093a6000830184610916565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6109828261085a565b810181811067ffffffffffffffff821117156109a1576109a061094a565b5b80604052505050565b60006109b4610775565b90506109c08282610979565b919050565b600067ffffffffffffffff8211156109e0576109df61094a565b5b6109e98261085a565b9050602081019050919050565b82818337600083830152505050565b6000610a18610a13846109c5565b6109aa565b905082815260208101848484011115610a3457610a33610945565b5b610a3f8482856109f6565b509392505050565b600082601f830112610a5c57610a5b610940565b5b8135610a6c848260208601610a05565b91505092915050565b600060208284031215610a8b57610a8a61077f565b5b600082013567ffffffffffffffff811115610aa957610aa8610784565b5b610ab584828501610a47565b91505092915050565b7f43616c6c6572206973206e6f7420746865206f776e6572000000000000000000600082015250565b6000610af460178361081f565b9150610aff82610abe565b602082019050919050565b60006020820190508181036000830152610b2381610ae7565b9050919050565b7f436f6e747261637420697320616c72656164792064657374726f796564000000600082015250565b6000610b60601d8361081f565b9150610b6b82610b2a565b602082019050919050565b60006020820190508181036000830152610b8f81610b53565b9050919050565b600081905092915050565b50565b6000610bb1600083610b96565b9150610bbc82610ba1565b600082019050919050565b6000610bd282610ba4565b9150819050919050565b7f4574686572207472616e7366657220746f206f776e6572206661696c6564206f60008201527f6e2073656c6664657374727563742e0000000000000000000000000000000000602082015250565b6000610c38602f8361081f565b9150610c4382610bdc565b604082019050919050565b60006020820190508181036000830152610c6781610c2b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610cb557607f821691505b602082108103610cc857610cc7610c6e565b5b50919050565b7f4e616d652063616e6e6f7420626520656d707479000000000000000000000000600082015250565b6000610d0460148361081f565b9150610d0f82610cce565b602082019050919050565b60006020820190508181036000830152610d3381610cf7565b9050919050565b7f4164647265737320616c72656164792072656769737465726564000000000000600082015250565b6000610d70601a8361081f565b9150610d7b82610d3a565b602082019050919050565b60006020820190508181036000830152610d9f81610d63565b9050919050565b600081905092915050565b6000610dbc82610814565b610dc68185610da6565b9350610dd6818560208601610830565b80840191505092915050565b6000610dee8284610db1565b915081905092915050565b7f4e616d6520616c72656164792074616b656e0000000000000000000000000000600082015250565b6000610e2f60128361081f565b9150610e3a82610df9565b602082019050919050565b60006020820190508181036000830152610e5e81610e22565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610ec77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610e8a565b610ed18683610e8a565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610f0e610f09610f04846108b3565b610ee9565b6108b3565b9050919050565b6000819050919050565b610f2883610ef3565b610f3c610f3482610f15565b848454610e97565b825550505050565b600090565b610f51610f44565b610f5c818484610f1f565b505050565b5b81811015610f8057610f75600082610f49565b600181019050610f62565b5050565b601f821115610fc557610f9681610e65565b610f9f84610e7a565b81016020851015610fae578190505b610fc2610fba85610e7a565b830182610f61565b50505b505050565b600082821c905092915050565b6000610fe860001984600802610fca565b1980831691505092915050565b60006110018383610fd7565b9150826002028217905092915050565b61101a82610814565b67ffffffffffffffff8111156110335761103261094a565b5b61103d8254610c9d565b611048828285610f84565b600060209050601f83116001811461107b5760008415611069578287015190505b6110738582610ff5565b8655506110db565b601f19841661108986610e65565b60005b828110156110b15784890151825560018201915060208501945060208101905061108c565b868310156110ce57848901516110ca601f891682610fd7565b8355505b6001600288020188555050505b505050505050565b600060408201905081810360008301526110fd818561086b565b905061110c60208301846108a4565b939250505056fea2646970667358221220346d98db55eedc672d7c6a6d647e34373fe1081b134d546f4c75acd97933170364736f6c634300081c0033";

type DemocracyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DemocracyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Democracy__factory extends ContractFactory {
  constructor(...args: DemocracyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Democracy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Democracy__factory {
    return super.connect(runner) as Democracy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DemocracyInterface {
    return new Interface(_abi) as DemocracyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Democracy {
    return new Contract(address, _abi, runner) as unknown as Democracy;
  }
}
